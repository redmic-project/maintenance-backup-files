version: '3.5'

services:
  backup-files:
    image: ${BACKUP_FILES_IMAGE_NAME:-registry.gitlab.com/redmic-project/maintenance/backup-files}:${BACKUP_FILES_IMAGE_TAG:-latest}
    build:
      context: ..
      dockerfile: ${BACKUP_FILES_DOCKERFILE:-Dockerfile}
      args:
        ALPINE_IMAGE_TAG:
        CURL_VERSION:
        BASH_VERSION:
        GLIBC_VERSION:
        AWS_CLI_VERSION:
        BACKUP_PATH:
    environment:
      BACKUP_PATH:
      PATHS_TO_BACKUP:
      WORK_PATH:
      UPLOAD_BUCKET:
      UPLOAD_ENDPOINT_URL:
      AWS_ACCESS_KEY_ID:
      AWS_SECRET_ACCESS_KEY:
      AWS_DEFAULT_REGION:
      AWS_OUTPUT:
      PUSHGATEWAY_HOST:
      PUSHGATEWAY_JOB:
      PUSHGATEWAY_LABEL:
    networks:
      metric-net:
      minio-net:
    volumes:
      - backup-vol:${BACKUP_PATH}
    deploy:
      mode: replicated
      replicas: ${BACKUP_FILES_REPLICAS:-1}
      restart_policy:
        condition: on-failure
        delay: ${BACKUP_FILES_RESTART_DELAY:-30s}
      resources:
        limits:
          cpus: '${BACKUP_FILES_RESOURCES_LIMITS_CPUS:-0.5}'
          memory: ${BACKUP_FILES_RESOURCES_LIMITS_MEMORY:-256M}
        reservations:
          cpus: '${BACKUP_FILES_RESOURCES_RESERVATIONS_CPUS:-0.001}'
          memory: ${BACKUP_FILES_RESOURCES_RESERVATIONS_MEMORY:-64M}

networks:
  metric-net:
    name: ${METRIC_NET_NAME:-metric-net}
    driver: ${METRIC_NET_DRIVER:-overlay}
    external: true

  minio-net:
    name: ${MINIO_NET_NAME:-minio-net}
    driver: ${MINIO_NET_DRIVER:-overlay}
    external: true

volumes:
  backup-vol:
    name: ${BACKUP_VOL_NAME}
    external: true
